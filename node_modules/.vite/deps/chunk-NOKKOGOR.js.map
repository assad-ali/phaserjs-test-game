{
  "version": 3,
  "sources": ["../../phaser3-rex-plugins/plugins/utils/input/CursorKeys.js", "../../phaser3-rex-plugins/plugins/utils/math/RadToDeg.js", "../../phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/Const.js", "../../phaser3-rex-plugins/plugins/utils/math/angle/angletodirections/AngleToDirections.js", "../../phaser3-rex-plugins/plugins/utils/input/VectorToCursorKeys.js", "../../phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js", "../../phaser3-rex-plugins/plugins/input/touchcursor/TouchCursor.js", "../../phaser3-rex-plugins/plugins/touchcursor.js", "../../phaser3-rex-plugins/plugins/input/virtualjoystick/VirtualJoyStick.js", "../../phaser3-rex-plugins/plugins/virtualjoystick.js"],
  "sourcesContent": ["const Key = Phaser.Input.Keyboard.Key;\r\nconst KeyCodes = Phaser.Input.Keyboard.KeyCodes;\r\n\r\nclass CursorKeys {\r\n    constructor(scene) {\r\n        // scene: scene instance, or undefined\r\n        this.cursorKeys = {\r\n            up: new Key(scene, KeyCodes.UP),\r\n            down: new Key(scene, KeyCodes.DOWN),\r\n            left: new Key(scene, KeyCodes.LEFT),\r\n            right: new Key(scene, KeyCodes.RIGHT)\r\n        }\r\n        this.noKeyDown = true;\r\n    }\r\n\r\n    shutdown(fromScene) {\r\n        for (var key in this.cursorKeys) {\r\n            this.cursorKeys[key].destroy();\r\n        }\r\n        this.cursorKeys = undefined;\r\n    }\r\n\r\n    destroy(fromScene) {\r\n        shutdown(fromScene);\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.cursorKeys;\r\n    }\r\n\r\n    setKeyState(keyName, isDown) {\r\n        var key = this.cursorKeys[keyName];\r\n\r\n        if (!key.enabled) {\r\n            return this;\r\n        }\r\n        if (isDown) {\r\n            this.noKeyDown = false;\r\n        }\r\n\r\n        if (key.isDown !== isDown) {\r\n            FakeEvent.timeStamp = Date.now();\r\n            FakeEvent.keyCode = key.keyCode;\r\n            if (isDown) {\r\n                key.onDown(FakeEvent);\r\n            } else {\r\n                key.onUp(FakeEvent);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clearAllKeysState() {\r\n        this.noKeyDown = true;\r\n        for (var keyName in this.cursorKeys) {\r\n            this.setKeyState(keyName, false);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getKeyState(keyName) {\r\n        return this.cursorKeys[keyName];\r\n    }\r\n\r\n    get upKeyDown() {\r\n        return this.cursorKeys.up.isDown;\r\n    }\r\n\r\n    get downKeyDown() {\r\n        return this.cursorKeys.down.isDown;\r\n    }\r\n\r\n    get leftKeyDown() {\r\n        return this.cursorKeys.left.isDown;\r\n    }\r\n\r\n    get rightKeyDown() {\r\n        return this.cursorKeys.right.isDown;\r\n    }\r\n\r\n    get anyKeyDown() {\r\n        return !this.noKeyDown;\r\n    }\r\n}\r\n\r\nvar FakeEvent = {\r\n    timeStamp: 0,\r\n    keyCode: 0,\r\n    altKey: false,\r\n    ctrlKey: false,\r\n    shiftKey: false,\r\n    metaKey: false,\r\n    location: 0,\r\n};\r\n\r\nexport default CursorKeys;\r\n", "/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar RAD_TO_DEG = 180 / Math.PI;\r\n\r\n/**\r\n * Convert the given angle in radians, to the equivalent angle in degrees.\r\n *\r\n * @function Phaser.Math.RadToDeg\r\n * @since 3.0.0\r\n *\r\n * @param {number} radians - The angle in radians to convert ot degrees.\r\n *\r\n * @return {integer} The given angle converted to degrees.\r\n */\r\nvar RadToDeg = function (radians)\r\n{\r\n    return radians * RAD_TO_DEG;\r\n};\r\n\r\nexport default RadToDeg;\r\n", "export default {\r\n    'up&down': 0,\r\n    'left&right': 1,\r\n    '4dir': 2,\r\n    '8dir': 3\r\n};", "var AngleToDirections = function (angle, dirMode, out) {\r\n    if (out === undefined) {\r\n        out = {}\r\n    } else if (out === true) {\r\n        out = globOut;\r\n    }\r\n\r\n    out.left = false;\r\n    out.right = false;\r\n    out.up = false;\r\n    out.down = false;\r\n\r\n    angle = (angle + 360) % 360;\r\n    switch (dirMode) {\r\n        case 0: // up & down\r\n            if (angle < 180) {\r\n                out.down = true;\r\n            } else {\r\n                out.up = true;\r\n            }\r\n            break;\r\n\r\n        case 1: // left & right\r\n            if ((angle > 90) && (angle <= 270)) {\r\n                out.left = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 2: // 4 dir\r\n            if ((angle > 45) && (angle <= 135)) {\r\n                out.down = true;\r\n            } else if ((angle > 135) && (angle <= 225)) {\r\n                out.left = true;\r\n            } else if ((angle > 225) && (angle <= 315)) {\r\n                out.up = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n\r\n        case 3: // 8 dir\r\n            if ((angle > 22.5) && (angle <= 67.5)) {\r\n                out.down = true;\r\n                out.right = true;\r\n            } else if ((angle > 67.5) && (angle <= 112.5)) {\r\n                out.down = true;\r\n            } else if ((angle > 112.5) && (angle <= 157.5)) {\r\n                out.down = true;\r\n                out.left = true;\r\n            } else if ((angle > 157.5) && (angle <= 202.5)) {\r\n                out.left = true;\r\n            } else if ((angle > 202.5) && (angle <= 247.5)) {\r\n                out.left = true;\r\n                out.up = true;\r\n            } else if ((angle > 247.5) && (angle <= 292.5)) {\r\n                out.up = true;\r\n            } else if ((angle > 292.5) && (angle <= 337.5)) {\r\n                out.up = true;\r\n                out.right = true;\r\n            } else {\r\n                out.right = true;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar globOut = {};\r\n\r\nexport default AngleToDirections;", "import CursorKeys from './CursorKeys.js';\r\nimport RadToDeg from '../math/RadToDeg.js';\r\nimport DIRMODE from '../math/angle/angletodirections/Const.js';\r\nimport AngleToDirections from '../math/angle/angletodirections/AngleToDirections.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst GetDist = Phaser.Math.Distance.Between;\r\nconst GetAngle = Phaser.Math.Angle.Between;\r\n\r\nclass VectorToCursorKeys extends CursorKeys {\r\n    constructor(scene, config) {\r\n        super(scene);\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        if (this.start == undefined) {\r\n            this.start = { x: 0, y: 0 };\r\n        }\r\n        if (this.end == undefined) {\r\n            this.end = { x: 0, y: 0 };\r\n        }\r\n        this._enable = undefined;\r\n        this.setEnable(GetValue(o, 'enable', true));\r\n        this.setMode(GetValue(o, 'dir', '8dir'));\r\n        this.setDistanceThreshold(GetValue(o, 'forceMin', 16));\r\n\r\n        var startX = GetValue(o, \"start.x\", null);\r\n        var startY = GetValue(o, \"start.y\", null);\r\n        var endX = GetValue(o, \"end.x\", null);\r\n        var endY = GetValue(o, \"end.y\", null);\r\n        this.setVector(startX, startY, endX, endY);\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            enable: this.enable,\r\n            dir: this.dirMode,\r\n            forceMin: this.forceMin,\r\n\r\n            start: {\r\n                x: this.start.x,\r\n                y: this.start.y\r\n            },\r\n            end: {\r\n                x: this.end.x,\r\n                y: this.end.y\r\n            }\r\n        };\r\n    }\r\n\r\n    setMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = DIRMODE[m];\r\n        }\r\n        this.dirMode = m;\r\n        return this;\r\n    }\r\n\r\n    get enable() {\r\n        return this._enable;\r\n    }\r\n\r\n    set enable(e) {\r\n        if (this._enable === e) {\r\n            return;\r\n        }\r\n        if (!e) {\r\n            this.clearVector();\r\n        }\r\n        this._enable = e;\r\n        return this;\r\n    }\r\n\r\n    setEnable(e) {\r\n        if (e === undefined) {\r\n            e = true;\r\n        }\r\n\r\n        this.enable = e;\r\n        return this;\r\n    }\r\n\r\n    toggleEnable() {\r\n        this.setEnable(!this.enable);\r\n        return this;\r\n    }\r\n\r\n    setDistanceThreshold(d) {\r\n        if (d < 0) {\r\n            d = 0;\r\n        }\r\n        this.forceMin = d;\r\n        return this;\r\n    }\r\n\r\n    clearVector() {\r\n        this.start.x = 0;\r\n        this.start.y = 0;\r\n        this.end.x = 0;\r\n        this.end.y = 0;\r\n        this.clearAllKeysState();\r\n        return this;\r\n    }\r\n\r\n    setVector(x0, y0, x1, y1) {\r\n        if (!this.enable) {\r\n            // Do nothing\r\n            return this;\r\n        }\r\n\r\n        if (x0 === null) {\r\n            // Clear all keys' state\r\n            this.clearVector();\r\n            return this;\r\n        }\r\n\r\n        // (0,0) -> (x0, y0)\r\n        if (x1 === undefined) {\r\n            x1 = x0;\r\n            x0 = 0;\r\n            y1 = y0;\r\n            y0 = 0;\r\n        }\r\n\r\n        this.start.x = x0;\r\n        this.start.y = y0;\r\n        this.end.x = x1;\r\n        this.end.y = y1;\r\n\r\n        if ((this.forceMin > 0) && (this.force < this.forceMin)) {\r\n            // No key pressed\r\n            this.clearVector();\r\n            return this;\r\n        }\r\n\r\n        // Update keys' state\r\n        this.noKeyDown = true;\r\n        var dirStates = AngleToDirections(this.angle, this.dirMode, true);\r\n        for (var dir in dirStates) {\r\n            this.setKeyState(dir, dirStates[dir]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get forceX() {\r\n        return this.end.x - this.start.x;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.end.y - this.start.y;\r\n    }\r\n\r\n    get force() {\r\n        return GetDist(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get rotation() {\r\n        return GetAngle(this.start.x, this.start.y, this.end.x, this.end.y);\r\n    }\r\n\r\n    get angle() {\r\n        return RadToDeg(this.rotation); // -180 ~ 180\r\n    }\r\n\r\n    get octant() {\r\n        var octant = 0;\r\n        if (this.rightKeyDown) {\r\n            octant = (this.downKeyDown) ? 45 : 0;\r\n        } else if (this.downKeyDown) {\r\n            octant = (this.leftKeyDown) ? 135 : 90;\r\n        } else if (this.leftKeyDown) {\r\n            octant = (this.upKeyDown) ? 225 : 180;\r\n        } else if (this.upKeyDown) {\r\n            octant = (this.rightKeyDown) ? 315 : 270;\r\n        }\r\n        return octant;\r\n    }\r\n}\r\n\r\nexport default VectorToCursorKeys;", "export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === true) || (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    },\r\n\r\n    eventNames: function() {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.eventNames.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};", "import VectorToCursorKeys from '../../utils/input/VectorToCursorKeys.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst CircleClass = Phaser.Geom.Circle;\r\nconst CircleContains = Phaser.Geom.Circle.Contains;\r\n\r\nclass TouchCursor extends VectorToCursorKeys {\r\n    constructor(gameObject, config) {\r\n        var scene = gameObject.scene;\r\n        super(scene, config);\r\n        //this.resetFromJSON(config); // this function had been called in super(config)\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n\r\n        this.scene = scene;\r\n        this.mainCamera = scene.cameras.main;\r\n        this.pointer = undefined;\r\n        this.gameObject = gameObject;\r\n        this.radius = GetValue(config, 'radius', 100);\r\n\r\n        gameObject.setInteractive(new CircleClass(gameObject.displayOriginX, gameObject.displayOriginY, this.radius), CircleContains);\r\n\r\n        this.boot();\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        super.resetFromJSON(o);\r\n        this.pointer = undefined;\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        var o = super.toJSON();\r\n        o.radius = this.radius;\r\n\r\n        return o;\r\n    }\r\n\r\n    boot() {\r\n        this.gameObject.on('pointerdown', this.onKeyDownStart, this);\r\n        this.gameObject.on('pointerover', this.onKeyDownStart, this);\r\n\r\n        this.scene.input.on('pointermove', this.onKeyDown, this);\r\n        this.scene.input.on('pointerup', this.onKeyUp, this);\r\n\r\n        this.gameObject.once('destroy', this.onParentDestroy, this);\r\n    }\r\n\r\n    shutdown(fromScene) {\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n\r\n        // gameObject events will be removed when this gameObject destroyed \r\n        // this.gameObject.off('pointerdown', this.onKeyDownStart, this);\r\n        // this.gameObject.off('pointerover', this.onKeyDownStart, this);\r\n\r\n        this.scene.input.off('pointermove', this.onKeyDown, this);\r\n        this.scene.input.off('pointerup', this.onKeyUp, this);\r\n\r\n        this.destroyEventEmitter();\r\n\r\n        this.scene = undefined;\r\n        this.mainCamera = undefined;\r\n        this.pointer = undefined;\r\n        this.gameObject = undefined;\r\n\r\n        super.shutdown();\r\n    }\r\n\r\n    destroy(fromScene) {\r\n        this.shutdown(fromScene);\r\n    }\r\n\r\n    onParentDestroy(parent, fromScene) {\r\n        this.destroy(fromScene);\r\n    }\r\n\r\n    onKeyDownStart(pointer) {\r\n        if ((!pointer.isDown) ||\r\n            (this.pointer !== undefined)) {\r\n            return;\r\n        }\r\n        this.pointer = pointer;\r\n        this.onKeyDown(pointer);\r\n    }\r\n\r\n    onKeyDown(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n\r\n        var camera = pointer.camera;\r\n        if (!camera) {\r\n            // Pointer is outside of any camera, no worldX/worldY available\r\n            return;\r\n        }\r\n\r\n        // Vector of world position\r\n        var gameObject = this.gameObject;\r\n        var worldXY = this.end;\r\n\r\n        // Note: pointer.worldX, pointer.worldY might not be the world position of this camera,\r\n        // if this camera is not main-camera\r\n        if (camera !== this.mainCamera) {\r\n            camera.getWorldPoint(pointer.x, pointer.y, worldXY);\r\n        } else {\r\n            worldXY.x = pointer.worldX;\r\n            worldXY.y = pointer.worldY;\r\n        }\r\n\r\n        this.setVector(\r\n            (gameObject.x + camera.scrollX),\r\n            (gameObject.y + camera.scrollY),\r\n            worldXY.x,\r\n            worldXY.y\r\n        );\r\n\r\n        this.emit('update');\r\n    }\r\n\r\n    onKeyUp(pointer) {\r\n        if (this.pointer !== pointer) {\r\n            return;\r\n        }\r\n        this.pointer = undefined;\r\n        this.clearVector();\r\n        this.emit('update');\r\n    }\r\n\r\n}\r\n\r\nObject.assign(\r\n    TouchCursor.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default TouchCursor;", "import TouchCursor from './input/touchcursor/TouchCursor.js';\r\nexport default TouchCursor;", "import TouchCursor from '../../touchcursor.js';\r\nimport EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass VirtualJoyStick {\r\n    constructor(scene, config) {\r\n        if (config === undefined) {\r\n            config = {};\r\n        }\r\n\r\n        // Event emitter\r\n        var eventEmitter = GetValue(config, 'eventEmitter', undefined);\r\n        var EventEmitterClass = GetValue(config, 'EventEmitterClass', undefined);\r\n        this.setEventEmitter(eventEmitter, EventEmitterClass);\r\n        config.eventEmitter = this.getEventEmitter();\r\n\r\n        this.scene = scene;\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n        this.setRadius(GetValue(config, 'radius', 100));\r\n\r\n        this.addBase(GetValue(config, 'base', undefined), config);\r\n        this.addThumb(GetValue(config, 'thumb', undefined));\r\n\r\n        var x = GetValue(config, 'x', 0);\r\n        var y = GetValue(config, 'y', 0);\r\n        this.base.setPosition(x, y);\r\n        this.thumb.setPosition(x, y);\r\n\r\n        if (GetValue(config, 'fixed', true)) {\r\n            this.setScrollFactor(0);\r\n        }\r\n\r\n        this.boot();\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEventEmitter();\r\n        this.base.destroy(); // Also destroy touchCursor behavior\r\n        this.thumb.destroy();\r\n\r\n        this.scene = undefined;\r\n        this.base = undefined;\r\n        this.thumb = undefined;\r\n        this.touchCursor = undefined;\r\n    }\r\n\r\n    createCursorKeys() {\r\n        return this.touchCursor.createCursorKeys();\r\n    }\r\n\r\n    get forceX() {\r\n        return this.touchCursor.forceX;\r\n    }\r\n\r\n    get forceY() {\r\n        return this.touchCursor.forceY;\r\n    }\r\n\r\n    get force() {\r\n        return this.touchCursor.force;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.touchCursor.rotation;\r\n    }\r\n\r\n    get angle() {\r\n        return this.touchCursor.angle; // -180 ~ 180\r\n    }\r\n\r\n    get up() {\r\n        return this.touchCursor.upKeyDown;\r\n    }\r\n\r\n    get down() {\r\n        return this.touchCursor.downKeyDown;\r\n    }\r\n\r\n    get left() {\r\n        return this.touchCursor.leftKeyDown;\r\n    }\r\n\r\n    get right() {\r\n        return this.touchCursor.rightKeyDown;\r\n    }\r\n\r\n    get noKey() {\r\n        return this.touchCursor.noKeyDown;\r\n    }\r\n\r\n    get pointerX() {\r\n        return this.touchCursor.end.x;\r\n    }\r\n\r\n    get pointerY() {\r\n        return this.touchCursor.end.y;\r\n    }\r\n\r\n    get pointer() {\r\n        return this.touchCursor.pointer;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    set x(x) {\r\n        this.base.x = x;\r\n        this.thumb.x = x;\r\n    }\r\n\r\n    set y(y) {\r\n        this.base.y = y;\r\n        this.thumb.y = y;\r\n    }\r\n\r\n    get x() {\r\n        return this.base.x;\r\n    }\r\n\r\n    get y() {\r\n        return this.base.y;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.visible = visible;\r\n        return this;\r\n    }\r\n\r\n    toggleVisible() {\r\n        this.visible = !this.visible;\r\n        return this;\r\n    }\r\n\r\n    get visible() {\r\n        return this.base.visible;\r\n    }\r\n\r\n    set visible(visible) {\r\n        this.base.visible = visible;\r\n        this.thumb.visible = visible;\r\n    }\r\n\r\n    get enable() {\r\n        return this.touchCursor.enable;\r\n    }\r\n\r\n    set enable(value) {\r\n        this.touchCursor.setEnable(value);\r\n    }\r\n\r\n    setEnable(e) {\r\n        if (e === undefined) {\r\n            e = true;\r\n        }\r\n        this.enable = e;\r\n        return this;\r\n    }\r\n\r\n    toggleEnable() {\r\n        this.setEnable(!this.enable);\r\n        return this;\r\n    }\r\n\r\n    setRadius(radius) {\r\n        this.radius = radius;\r\n        return this;\r\n    }\r\n\r\n    addBase(gameObject, config) {\r\n        if (this.base) {\r\n            this.base.destroy();\r\n            // Also destroy touchCursor behavior\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, this.radius)\r\n                .setStrokeStyle(3, 0x0000ff);\r\n        }\r\n\r\n        this.touchCursor = new TouchCursor(gameObject, config)\r\n        this.base = gameObject;\r\n        return this;\r\n    }\r\n\r\n    addThumb(gameObject) {\r\n        if (this.thumb) {\r\n            this.thumb.destroy();\r\n        }\r\n\r\n        if (gameObject === undefined) {\r\n            gameObject = this.scene.add.circle(0, 0, 40)\r\n                .setStrokeStyle(3, 0x00ff00);\r\n        }\r\n        this.thumb = gameObject;\r\n        return this;\r\n    }\r\n\r\n    setScrollFactor(scrollFactor) {\r\n        this.base.setScrollFactor(scrollFactor);\r\n        this.thumb.setScrollFactor(scrollFactor);\r\n        return this;\r\n    }\r\n\r\n    boot() {\r\n        this.touchCursor.on('update', this.update, this);\r\n    }\r\n\r\n    update() {\r\n        var touchCursor = this.touchCursor;\r\n        // Start from (0,0)\r\n        var x = this.base.x;\r\n        var y = this.base.y;\r\n        if (touchCursor.anyKeyDown) {\r\n            if (touchCursor.force > this.radius) { // Exceed radius\r\n                var rad = touchCursor.rotation;\r\n                x += Math.cos(rad) * this.radius;\r\n                y += Math.sin(rad) * this.radius;\r\n            } else {\r\n                x += touchCursor.forceX;\r\n                y += touchCursor.forceY;\r\n            }\r\n        }\r\n        this.thumb.x = x;\r\n        this.thumb.y = y\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nObject.assign(\r\n    VirtualJoyStick.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nexport default VirtualJoyStick;", "import VirtualJoyStick from './input/virtualjoystick/VirtualJoyStick.js';\r\nexport default VirtualJoyStick;"],
  "mappings": "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",
  "names": []
}
